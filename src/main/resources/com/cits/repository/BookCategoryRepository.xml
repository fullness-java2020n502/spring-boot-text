<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cits.repository.BookCategoryRepository">
	<!-- ここの中にSQLを記述していく -->
	<!-- 全件取得 -->
	<select id="selectAll" resultType="BookCategory"><!-- id属性にメソッド名を入れる -->
		select * from t_book_category
	</select>
	<!-- 1件取得 -->
	<select id="selectById" resultType="BookCategory">
		select * from t_book_category where id = #{id}
	</select>
	<!-- 1件取得（IDと名前） -->
	<select id="selectByIdAndName" resultType="BookCategory">
		select * from t_book_category where id = #{id}
		<if test="name != null">
		and name = #{name}
		</if>
	</select>
	<!-- 書籍IDリストから検索 -->
	<select id="selectByIdIn" resultType="BookCategory">
		select * from t_book_category where id in
		<foreach item="id" collection="list" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</select>

	<!-- 書籍カテゴリ名で部分一致検索 -->
	<select id="selectByNameLike" resultType="BookCategory">
		<bind name="name" value="'%'+_parameter+'%'" />
		select * from t_book_category where name like #{name}
	</select>
	<!-- 全件取得（書籍含む）のresultMap -->
	<resultMap type="BookCategory" id="selectAllCategoryAndBooks">
		<id property="id" column="c_id" />
		<result property="name" column="c_name" />
		<collection property="books" ofType="Book">
			<id property="id" column="b_id" />
			<result property="title" column="b_title" />
			<result property="author" column="b_author" />
			<result property="status" column="b_status" />
			<result property="startDate" column="b_start_date" />
			<result property="endDate" column="b_end_date" />
		</collection>
	</resultMap>
	<!-- 全件取得（「多」の書籍も含む） -->
	<select id="selectAllCategoryAndBooks" resultMap="selectAllCategoryAndBooks">
		select
			c.id c_id,
			c.name c_name,
			b.id b_id,
			b.title b_title,
			b.author b_author,
			b.start_date b_start_date,
			b.end_date b_end_date
		from
			t_book_category c
		inner join
			t_book b
		on
			c.id = b.category_id;
	</select>

	<!-- 1件登録 -->
	<!-- parameterType属性で引数の型（エンティティ）を指定 -->
	<insert id="insert" parameterType="BookCategory">
		insert into t_book_category values(#{id},#{name})
	</insert>
	<!-- 1件更新 -->
	<update id="updateById" parameterType="BookCategory">
		update t_book_category set name = #{name} where id = #{id}
	</update>
	<!-- 1件削除 -->
	<delete id="deleteById" parameterType="BookCategory">
		delete from t_book_category where id = #{id}
	</delete>
</mapper>